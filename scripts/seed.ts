/** @format */
import { PrismaClient } from "@prisma/client";
import { hashPassword } from "../src/middlewares/auth";

const prisma = new PrismaClient();

async function main() {
  console.log("üå± Starting database seed...");

  // Create admin user
  const adminPassword = await hashPassword("Admin@123456");
  const admin = await prisma.user.upsert({
    where: { username: "admin" },
    update: {},
    create: {
      username: "admin",
      passwordHash: adminPassword,
      role: "ADMIN",
      lang: "th",
      isActive: true,
    },
  });
  console.log("Admin user created");

  // Create test player
  const playerPassword = await hashPassword("Player@123");
  const player = await prisma.user.upsert({
    where: { username: "player1" },
    update: {},
    create: {
      username: "player1",
      passwordHash: playerPassword,
      role: "PLAYER",
      lang: "th",
      isActive: true,
    },
  });
  console.log("Test player created");

  // Sample questions for each category
  const sampleQuestions = [
    // HEALTH Questions
    {
      category: "HEALTH" as const,
      type: "MISSING_NUTRIENT" as const,
      inputType: "TEXT" as const,
      difficulty: 1,
      translations: {
        th: {
          questionText: "‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡∏Ç‡∏≤‡∏î‡∏ß‡∏¥‡∏ï‡∏≤‡∏°‡∏¥‡∏ô‡∏≠‡∏∞‡πÑ‡∏£ ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏´‡∏á‡∏∑‡∏≠‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏≠‡∏≠‡∏Å?",
          correctAnswers: ["‡∏ß‡∏¥‡∏ï‡∏≤‡∏°‡∏¥‡∏ô‡∏ã‡∏µ", "‡∏ß‡∏¥‡∏ï‡∏≤‡∏°‡∏¥‡∏ô C", "Vitamin C"],
          explanation: "‡∏ß‡∏¥‡∏ï‡∏≤‡∏°‡∏¥‡∏ô‡∏ã‡∏µ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏•‡∏≤‡πÄ‡∏à‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ï‡πà‡∏≠‡πÄ‡∏´‡∏á‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡∏∞‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏¢‡∏∑‡πà‡∏≠",
        },
        en: {
          questionText: "What vitamin deficiency causes bleeding gums?",
          correctAnswers: ["Vitamin C", "C"],
          explanation: "Vitamin C is essential for collagen production in gums and tissues",
        },
      },
    },
    {
      category: "HEALTH" as const,
      type: "DISEASE_FROM_IMAGE" as const,
      inputType: "MULTIPLE_CHOICE_4" as const,
      difficulty: 2,
      translations: {
        th: {
          questionText: "‡∏à‡∏≤‡∏Å‡∏£‡∏π‡∏õ‡∏ú‡∏∑‡πà‡∏ô‡πÅ‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏á‡∏Å‡∏•‡∏° ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÇ‡∏£‡∏Ñ‡∏≠‡∏∞‡πÑ‡∏£?",
          options: ["‡πÇ‡∏£‡∏Ñ‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏ô", "‡πÇ‡∏£‡∏Ñ‡∏Å‡∏•‡∏≤‡∏Å", "‡πÇ‡∏£‡∏Ñ‡∏™‡∏∞‡πÄ‡∏Å‡πá‡∏î‡πÄ‡∏á‡∏¥‡∏ô", "‡πÇ‡∏£‡∏Ñ‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö"],
          correctAnswers: ["‡πÇ‡∏£‡∏Ñ‡∏Å‡∏•‡∏≤‡∏Å"],
          explanation: "‡πÇ‡∏£‡∏Ñ‡∏Å‡∏•‡∏≤‡∏Å‡∏°‡∏µ‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏∑‡πà‡∏ô‡∏ß‡∏á‡∏Å‡∏•‡∏°‡∏Ç‡∏≠‡∏ö‡πÅ‡∏î‡∏á‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏à‡∏≤‡∏á",
        },
        en: {
          questionText: "What skin condition shows circular red patches?",
          options: ["Leprosy", "Ringworm", "Psoriasis", "Dermatitis"],
          correctAnswers: ["Ringworm"],
          explanation: "Ringworm appears as circular patches with red edges and clear centers",
        },
      },
    },

    // COGNITION Questions
    {
      category: "COGNITION" as const,
      type: "ODD_ONE_OUT" as const,
      inputType: "TEXT" as const,
      difficulty: 1,
      translations: {
        th: {
          questionText: "‡∏Ç‡πâ‡∏≠‡πÉ‡∏î‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏û‡∏ß‡∏Å: ‡πÅ‡∏°‡∏ß, ‡∏™‡∏∏‡∏ô‡∏±‡∏Ç, ‡∏ô‡∏Å, ‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå",
          correctAnswers: ["‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå"],
          explanation: "‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏Ç‡∏≠‡∏á ‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏±‡∏ï‡∏ß‡πå",
        },
        en: {
          questionText: "Which doesn't belong: cat, dog, bird, car",
          correctAnswers: ["car"],
          explanation: "Car is an object while others are animals",
        },
      },
    },
    {
      category: "COGNITION" as const,
      type: "ILLEGAL_TEXT" as const,
      inputType: "MULTIPLE_CHOICE_4" as const,
      difficulty: 2,
      translations: {
        th: {
          questionText: "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏î‡∏ú‡∏¥‡∏î‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢?",
          options: ["‡∏Ç‡∏≤‡∏¢‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÇ‡∏≠‡∏ô", "‡∏£‡∏±‡∏ö‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏ï 500,000 ‡∏ö‡∏≤‡∏ó", "‡∏£‡∏±‡∏ö‡∏à‡πâ‡∏≤‡∏á‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î", "‡∏Ç‡∏≤‡∏¢‡∏£‡∏ñ‡∏°‡∏∑‡∏≠‡∏™‡∏≠‡∏á"],
          correctAnswers: ["‡∏£‡∏±‡∏ö‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏ï 500,000 ‡∏ö‡∏≤‡∏ó"],
          explanation: "‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≤‡∏¢‡∏≠‡∏ß‡∏±‡∏¢‡∏ß‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ú‡∏¥‡∏î‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢",
        },
        en: {
          questionText: "Which message is illegal?",
          options: [
            "House for sale with transfer",
            "Buying kidney 500,000 THB",
            "Cleaning service available",
            "Used car for sale",
          ],
          correctAnswers: ["Buying kidney 500,000 THB"],
          explanation: "Organ trading is illegal in Thailand",
        },
      },
    },

    // DIGITAL Questions
    {
      category: "DIGITAL" as const,
      type: "APP_IDENTITY" as const,
      inputType: "MULTIPLE_CHOICE_4" as const,
      difficulty: 1,
      translations: {
        th: {
          questionText: "‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏£‡∏π‡∏õ‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå ‡∏Ñ‡∏∑‡∏≠‡πÅ‡∏≠‡∏õ‡∏≠‡∏∞‡πÑ‡∏£?",
          options: ["Line", "WhatsApp", "Facebook", "WeChat"],
          correctAnswers: ["WhatsApp"],
          explanation: "WhatsApp ‡∏°‡∏µ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏£‡∏π‡∏õ‡∏´‡∏π‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå",
        },
        en: {
          questionText: "Green phone icon is which app?",
          options: ["Line", "WhatsApp", "Facebook", "WeChat"],
          correctAnswers: ["WhatsApp"],
          explanation: "WhatsApp has a green phone icon",
        },
      },
    },
    {
      category: "DIGITAL" as const,
      type: "SCAM_TEXT" as const,
      inputType: "MULTIPLE_CHOICE_4" as const,
      difficulty: 2,
      translations: {
        th: {
          questionText: "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏î‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏≠‡∏Å‡∏•‡∏ß‡∏á?",
          options: [
            "‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• ‡∏Å‡∏î link ‡∏î‡πà‡∏ß‡∏ô!",
            "‡∏ô‡∏±‡∏î‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ 10:00",
            "‡πÉ‡∏ö‡πÅ‡∏à‡πâ‡∏á‡∏´‡∏ô‡∏µ‡πâ‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ",
            "‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£ 20%",
          ],
          correctAnswers: ["‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• ‡∏Å‡∏î link ‡∏î‡πà‡∏ß‡∏ô!"],
          explanation: "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÅ‡∏ö‡∏ö‡∏Å‡∏∞‡∏ó‡∏±‡∏ô‡∏´‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Å‡∏î‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡πà‡∏ß‡∏ô‡∏°‡∏±‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏≠‡∏Å‡∏•‡∏ß‡∏á",
        },
        en: {
          questionText: "Which message is likely a scam?",
          options: [
            "You won! Click link now!",
            "Meeting tomorrow 10 AM",
            "This month's electricity bill",
            "Restaurant promotion 20% off",
          ],
          correctAnswers: ["You won! Click link now!"],
          explanation: "Sudden prize messages with urgent link clicking are usually scams",
        },
      },
    },

    // FINANCE Questions
    {
      category: "FINANCE" as const,
      type: "ARITHMETIC_TARGET" as const,
      inputType: "CALCULATION" as const,
      difficulty: 1,
      translations: {
        th: {
          questionText: "‡∏à‡∏á‡∏ö‡∏ß‡∏Å‡πÄ‡∏•‡∏Ç‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ 10",
          correctAnswers: ["10"],
          targetValue: 10,
          explanation: "‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: 5+5, 7+3, 6+4 ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏î‡πâ 10",
        },
        en: {
          questionText: "Add numbers to get 10",
          correctAnswers: ["10"],
          targetValue: 10,
          explanation: "Examples: 5+5, 7+3, 6+4 all equal 10",
        },
      },
    },
    {
      category: "FINANCE" as const,
      type: "MAX_VALUE_STACK" as const,
      inputType: "MULTIPLE_CHOICE_3" as const,
      difficulty: 2,
      translations: {
        th: {
          questionText: "‡∏Å‡∏≠‡∏á‡πÑ‡∏´‡∏ô‡∏°‡∏µ‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î: A) 5 ‡πÉ‡∏ö 100 ‡∏ö‡∏≤‡∏ó, B) 10 ‡πÉ‡∏ö 50 ‡∏ö‡∏≤‡∏ó, C) 20 ‡πÉ‡∏ö 20 ‡∏ö‡∏≤‡∏ó",
          options: ["‡∏Å‡∏≠‡∏á A", "‡∏Å‡∏≠‡∏á B", "‡∏Å‡∏≠‡∏á C"],
          correctAnswers: ["‡∏Å‡∏≠‡∏á A"],
          explanation: "‡∏Å‡∏≠‡∏á A = 500, ‡∏Å‡∏≠‡∏á B = 500, ‡∏Å‡∏≠‡∏á C = 400 (‡∏Å‡∏≠‡∏á A ‡πÅ‡∏•‡∏∞ B ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô ‡πÅ‡∏ï‡πà A ‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö)",
        },
        en: {
          questionText: "Which stack has most value: A) 5x100 THB, B) 10x50 THB, C) 20x20 THB",
          options: ["Stack A", "Stack B", "Stack C"],
          correctAnswers: ["Stack A"],
          explanation: "Stack A = 500, Stack B = 500, Stack C = 400",
        },
      },
    },
  ];

  // Insert sample questions
  let questionCount = 0;
  for (const questionData of sampleQuestions) {
    const { translations, ...questionInfo } = questionData;

    const question = await prisma.question.create({
      data: {
        ...questionInfo,
        isActive: true,
        translations: {
          create: [
            {
              lang: "th",
              questionText: translations.th.questionText,
              options: translations.th.options || [],
              correctAnswers: translations.th.correctAnswers,
              targetValue: translations.th.targetValue || null,
              explanation: translations.th.explanation || "",
            },
            {
              lang: "en",
              questionText: translations.en.questionText,
              options: translations.en.options || [],
              correctAnswers: translations.en.correctAnswers,
              targetValue: translations.en.targetValue || null,
              explanation: translations.en.explanation || "",
            },
          ],
        },
      },
    });
    questionCount++;
  }

  console.log(`Created ${questionCount} sample questions`);

  // Create sample game results for leaderboard
  const categories = ["HEALTH", "COGNITION", "DIGITAL", "FINANCE"] as const;

  for (let i = 0; i < 5; i++) {
    const category = categories[Math.floor(Math.random() * categories.length)];
    const correctAnswers = Math.floor(Math.random() * 6) + 5; // 5-10
    const score = correctAnswers * 10 * (Math.random() > 0.5 ? 1.5 : 1); // With or without time bonus

    await prisma.gameResult.create({
      data: {
        userId: player.id,
        category,
        score: Math.round(score),
        totalQuestions: 10,
        correctAnswers,
        timeSpent: Math.floor(Math.random() * 300) + 60, // 60-360 seconds
        completedAt: new Date(Date.now() - Math.random() * 7 * 24 * 60 * 60 * 1000), // Last 7 days
      },
    });
  }

  console.log("Created sample game results");

  console.log("\nDatabase seeded successfully!");
  console.log("\nLogin credentials:");
  console.log("Admin: username=admin, password=Admin@123456");
  console.log("Player: username=player1, password=Player@123");
}

main()
  .catch((e) => {
    console.error("‚ùå Seed failed:", e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
